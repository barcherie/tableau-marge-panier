import supabase from '../supabaseClient'; // ‚úÖ Oui chef.

// üì• R√©cup√®re tous les produits depuis Supabase
export const getAllProducts = async () => {
  const { data, error } = await supabase
    .from('products')
    .select('*')
    .order('created_at', { ascending: false });

  if (error) {
    console.error('Erreur lors du chargement des produits:', error);
    return [];
  }

  return data;
};

// üíæ Ajoute un seul produit √† la base
export const insertProduct = async (product) => {
    const { data, error } = await supabase
      .from("products")
      .insert([product])
      .select();
  
    if (error) {
      console.error("Erreur lors de l'insertion du produit:", error);
      return null;
    }
  
    if (!data || data.length === 0) {
      console.warn("Aucun produit retourn√© apr√®s insertion.");
      return null;
    }
  
    return data[0];
  };

// üîÑ Met √† jour un produit existant (par id)
export const updateProduct = async (id, updates) => {
    const { data, error } = await supabase
      .from("products")
      .update(updates)
      .eq("id", id)
      .select(); // üß† tr√®s important pour que Supabase renvoie le produit modifi√©
  
    if (error) {
      console.error("Erreur lors de la mise √† jour du produit:", error);
      return null;
    }
  
    // Si aucun produit retourn√© : on g√®re proprement
    if (!data || data.length === 0) {
      console.warn("Aucun produit retourn√© apr√®s update.");
      return null;
    }
  
    return data[0];
  };

// ‚ö†Ô∏è Supprime tous les produits puis ins√®re ceux d'un CSV
export const replaceAllProducts = async (newProducts) => {
    const { error: deleteError } = await supabase
      .from('products')
      .delete()
      .gt('created_at', '1900-01-01'); // üß† √ßa supprime tout de mani√®re s√©curis√©e
  
    if (deleteError) {
      console.error('Erreur lors de la suppression des produits:', deleteError);
      return null;
    }
  
    const { data, error: insertError } = await supabase
      .from('products')
      .insert(newProducts);
  
    if (insertError) {
      console.error("Erreur lors de l'insertion des nouveaux produits:", insertError);
      return null;
    }
  
    return data;
  };
  